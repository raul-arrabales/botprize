{
    "contents" : "\n# ---------------------------------------------\n# BotPrize 2014 Data Analytics - Ra√∫l Arrabales\n#\n# Aug. 2014. raul@conscious-robots.com \n# ---------------------------------------------\n\nprint(\"Calculating BotPrize 2014 results...\")\n\n# ------------\n# LOADING DATA\n# ------------\n\n# fpadata - Data frame with First-Person Assessment Data\nprint(\"Loading FPA data.\")\nfpadata <- readRDS(\"FPAdata.rds\")\n\n# tpadata - Dara frame with Third-Person Assessment Data\nprint(\"Loading TPA data.\")\ntpadata <- readRDS(\"TPAdata.rds\")\n\n\n# -----------------------\n# FIRST-PERSON ASSESSMENT\n# -----------------------\n\n# Get First-Person Assessment Judges Names\nFPAjudges <- GetJudges(fpadata)\nprint(\"FPA human judges are: \")\nprint(FPAjudges)\nwriteLines(\" \")\n\n# Get First-Person Assessment Bots Names\nFPAbots <- GetBots(fpadata)\nprint(\"FPA bots are: \")\nprint(FPAbots)\nwriteLines(\" \")\n\n\n# JUDGE RELIABILITY - JRmeasures\n\n# Judge Realiability Measures - Calculate FPA judges reliability\nprint(\"Calculating FPA Judge Reliability Measures\")\nJRmeasures <- CalculateJR(fpadata, FPAjudges)\nprint(JRmeasures)\nwriteLines(\" \")\n\n# Bots Judging Reliability Measures - Calculate FPA bots judging skills\nprint(\"Calculating FPA Bots Judging Reliability\")\nJRmeasuresBots <- CalculateJR(fpadata, FPAbots) \nprint(JRmeasuresBots)\nwriteLines(\" \")\n\n# Average Judge Reliability\nAvgJR <- sum(JRmeasures$JRmeasures) / nrow(JRmeasures)\nprint(\"Average Judges Judging Reliability:\")\nprint(AvgJR)\n\n# Average Judge Reliability\nAvgJRbots <- sum(JRmeasuresBots$JRmeasures) / nrow(JRmeasuresBots)\nprint(\"Average Bots Judging Reliability:\")\nprint(AvgJRbots)\nwriteLines(\" \")\n\n# Based on this JRR (the relative reliability of each judge), \n# we calculate the weighting factor for each judge: \n  \nJRmeasures[\"JRR\"] <- JRmeasures$JRmeasures / AvgJR\nJRmeasures[\"Weight\"] <- JRmeasures$JRR / nrow(JRmeasures)\n\n# Judge Reliability of all FPA players\nJRmeasuresAll <- merge(JRmeasures[,c(\"judges\", \"JRmeasures\")],JRmeasuresBots[,c(\"judges\", \"JRmeasures\")], all.x=TRUE, all.y=TRUE)\n# Ordered by reliability\nJRmeasuresAll <- JRmeasuresAll[order(JRmeasuresAll$JRmeasures, decreasing=TRUE),]\n\nprint(\"All players judging reliability:\")\nprint(JRmeasuresAll)\nwriteLines(\" \")\n\n\n# Bar Plots of Judge Reliability measures\nJRmeasures <- JRmeasures[order(JRmeasures$JRmeasures, decreasing=TRUE),]\nbarplot(JRmeasures$JRmeasures, main=\"Human Judges Reliability\", \n        names.arg=JRmeasures$judges)\n\nJRmeasuresBots <- JRmeasuresBots[order(JRmeasuresBots$JRmeasures, decreasing=TRUE),]\nbarplot(JRmeasuresBots$JRmeasures, main=\"Bots Judging Reliability\", \n        names.arg=JRmeasuresBots$judges, cex.names=0.8, las=2)\n\nbarplot(JRmeasuresAll$JRmeasures, main=\"Human Judges and Bots Judging Reliability\", \n        names.arg=JRmeasuresAll$judges, cex.names=0.8, las=2)\n\nbarplot(c(AvgJR, AvgJRbots), main=\"Human Judges and Bots Judging Average Reliability\", \n         col = c(\"blue\", \"yellow\"), names.arg=c(\"Humans\",\"Bots\"))\n\nbarplot(JRmeasures$Weight, main=\"Judge Weighting Factor\", \n        names.arg=JRmeasures$judges)\n\nbarplot(data.matrix(JRmeasures[,2:4]), \n        main=\"Judge Reliability Measures\", \n        col = c(\"darkblue\", \"red\", \"green\", \"brown\"), \n        legend = JRmeasures[,1], beside=TRUE) \n\n\n# GETTING THE HUMANNESS RATIO\n\nprint(\"Calculating Humanness and FPA ratios for bots:\")\nBotMeasures <- CalculateHumanness(fpadata, JRmeasures)\n\n# Ordered by Humanness\nBotMeasures <- BotMeasures[order(BotMeasures$Humanness, decreasing=TRUE),]\n\nprint(BotMeasures[,c(\"BotName\", \"Humanness\", \"FPA\")])\nwriteLines(\" \")\n\n# Bar Plots of Bot Hummanness measures\nbarplot(BotMeasures$Humanness, \n        main=\"Bots Unweighted Humanness Ratio\", \n        names.arg=BotMeasures$BotName, \n        cex.names=0.8, las=2)\n\nbarplot(BotMeasures$FPA, \n        main=\"Bots FPA Scores\", \n        names.arg=BotMeasures$BotName, \n        cex.names=0.8, las=2)\n\nbarplot(t(BotMeasures[,c(\"Humanness\", \"FPA\")]), \n        main=\"Bots Humanness & FPA Scores\", \n        names.arg=BotMeasures$BotName, \n        cex.names=0.8, las=2, \n        legend=c(\"Humanness\", \"FPA\"), beside=TRUE)\n\n\n# Calculate inter-rater reliability\n\nlibrary(irr) # Load inter-rater reliability library\n\nFPrates <- BotMeasures[,2:5] # Humanness proportions for each player by rater\n\nprint(\"Humanness proportions for each player by rater\")\nprint(BotMeasures[,1:5])\nwriteLines(\" \")\n\nCategoricalBotMeasures <- HumanOrBot(FPrates)\nprint(\"Humanness categorical classsification for each player by rater\")\nprint(CategoricalBotMeasures)\nwriteLines(\" \")\n\n# Calculate the Flesiss Kappa\nprint(\"Inter-rate Reliability - Fleiss Kappa:\")\nprint(kappam.fleiss(CategoricalBotMeasures))\nwriteLines(\" \")\n\n# Calculate humanness ratio also for human judges:\nprint(\"Calculating Humanness and FPA ratios for judges:\")\nJudgeMeasures <- CalculateJudgeHumanness(fpadata, JRmeasures)\n\n# Ordered by Humanness\nJudgeMeasures <- JudgeMeasures[order(JudgeMeasures$Humanness, decreasing=TRUE),]\n\nprint(JudgeMeasures[c(\"BotName\", \"Humanness\", \"FPA\")])\nwriteLines(\" \")\n\n# Bar Plots of Human Judges Hummanness measures\nbarplot(t(JudgeMeasures[,c(\"Humanness\", \"FPA\")]), \n        main=\"Human Judges Humanness & FPA Scores\", \n        names.arg=JudgeMeasures$BotName, \n        cex.names=0.8, las=2, \n        legend=c(\"Humanness\", \"FPA\"), beside=TRUE)\n\n# All players together:\nallMeasures <- rbind(BotMeasures, JudgeMeasures)\nallMeasures <- allMeasures[order(allMeasures$Humanness, decreasing=TRUE),]\nprint(\"Combined Humanness Measures:\")\nprint(allMeasures[c(\"BotName\", \"Humanness\", \"FPA\")])\nwriteLines(\" \")\n\n# Bar Plots of all players Hummanness measures\nbarplot(t(allMeasures[,c(\"Humanness\", \"FPA\")]), \n        main=\"Players Humanness & FPA Scores\", \n        names.arg=allMeasures$BotName, \n        cex.names=0.8, las=2, \n        legend=c(\"Humanness\", \"FPA\"), beside=TRUE)\n\nbarplot(t(allMeasures[,c(\"Humanness\")]), \n        main=\"Players Humanness Scores\", \n        names.arg=allMeasures$BotName, \n        cex.names=0.8, las=2)\n\nallMeasures <- allMeasures[order(allMeasures$FPA, decreasing=TRUE),]\n\nbarplot(allMeasures[,c(\"FPA\")], \n        main=\"Players FPA Scores\", \n        names.arg=allMeasures$BotName, \n        cex.names=0.8, las=2)\n\n# -----------------------\n# THIRD-PERSON ASSESSMENT\n# -----------------------\n\nprint(\"Calculating TPA results...\")\nwriteLines(\" \")\n\n# Calculate Judges reliability in TPA tasks\nprint(\"TPA judges average reliability:\")\nAvgJRtpa <- TPAavgJR(tpadata)\nprint(AvgJRtpa)\nwriteLines(\" \")\n\nprint(\"TPA H Results:\")\nTPAresults <- CalculateTPAHumanness(tpadata)\nTPAresults <- TPAresults[order(TPAresults$Humanness, decreasing=TRUE),]\nprint(TPAresults)\nwriteLines(\" \")\n\n# Looking only at bots\nBotTPAresults <- CalculateTPABotHumanness(TPAdata) \nBotTPAresults <- BotTPAresults[order(BotTPAresults$Humanness, decreasing=TRUE),]\nprint(\"TPA Humanness for bots:\")\nprint(BotTPAresults)\nwriteLines(\" \")\n\n\n# Bar Plots of all players TPA humanness measures\n\nbarplot(c(AvgJR, AvgJRbots, AvgJRtpa), main=\"FPA Judges, FPA Bots and TPA Judges Average Reliability\", \n        col = c(\"blue\", \"red\", \"yellow\"), names.arg=c(\"FPA H\", \"FPA B\", \"TPA H\"))\n\nbarplot(TPAresults$Humanness, \n        main=\"Players TPA Humanness Ratio\", \n        names.arg=TPAresults$PlayerName, \n        cex.names=0.8, las=2)\n\nbarplot(BotTPAresults$Humanness, \n        main=\"Bots TPA Humanness Ratio\", \n        names.arg=BotTPAresults$BotName, \n        cex.names=0.8, las=2)\n\n\n# -----------------------------------\n# FINAL RESULTS - Combining FPA & TPA\n# -----------------------------------\n\n# Adding FPA measures\nFinalResults <- allMeasures\n\n# Adding last column with final Humanness = FPA*FPWF + TPA*TPWF;\nFPWF <- 0.5\nTPWF <- 0.5\n\n# Adding TPA and final score measures\nFinalResults[\"TPA\"] <- rep(0, length(FinalResults$BotName))\nFinalResults[\"H\"] <- rep(0, length(FinalResults$BotName))\n\nfor (player in FinalResults$BotName )\n{\n   # print(c(\"player:\",player,TPAresults[TPAresults$PlayerName == player, \"Humanness\"], nrow(FinalResults[FinalResults$BotName == player,] )) )\n   \n   if ( nrow(FinalResults[FinalResults$BotName == player,] ) == 1 )\n   {\n     FinalResults[FinalResults$BotName == player,\"TPA\"] <- \n                        TPAresults[TPAresults$PlayerName == player, \"Humanness\"]\n   \n     FinalResults[FinalResults$BotName == player,\"H\"] <- \n       FPWF * FinalResults[FinalResults$BotName == player,\"TPA\"] +\n       TPWF * FinalResults[FinalResults$BotName == player,\"FPA\"]     \n   }\n   \n}\n\nFinalResults <- FinalResults[order(FinalResults$H, decreasing=TRUE),]\n\nprint(\"Final Results:\")\nprint(FinalResults[c(\"BotName\", \"Humanness\", \"FPA\", \"TPA\", \"H\")])\nwriteLines(\" \")\nprint(FinalResults[c(\"BotName\", \"FPA\", \"TPA\", \"H\")])\nwriteLines(\" \")\n\n# Bar Plots of all players H measures\nbarplot(t(FinalResults[,c(\"FPA\", \"TPA\", \"H\")]), \n        main=\"Players FPA, TPA & H Scores\", \n        names.arg=FinalResults$BotName, \n        cex.names=0.8, las=2, \n        legend=c(\"FPA\", \"TPA\", \"H\"), beside=TRUE)\n",
    "created" : 1408368174008.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1787892443",
    "id" : "93B86FA6",
    "lastKnownWriteTime" : 1410953475,
    "path" : "C:/Users/Arrabales/botprize/FinalResults.R",
    "project_path" : "FinalResults.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}